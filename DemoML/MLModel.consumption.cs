// This file was auto-generated by ML.NET Model Builder.
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace DemoML
{
    public partial class MLModel
    {
        /// <summary>
        /// model input class for MLModel.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [LoadColumn(0)]
            [ColumnName(@"col0")]
            public float Col0 { get; set; }

            [LoadColumn(1)]
            [ColumnName(@"col1")]
            public float Col1 { get; set; }

            [LoadColumn(2)]
            [ColumnName(@"col2")]
            public float Col2 { get; set; }

            [LoadColumn(3)]
            [ColumnName(@"col3")]
            public float Col3 { get; set; }

            [LoadColumn(4)]
            [ColumnName(@"col4")]
            public float Col4 { get; set; }

            [LoadColumn(5)]
            [ColumnName(@"col5")]
            public float Col5 { get; set; }

            [LoadColumn(6)]
            [ColumnName(@"col6")]
            public float Col6 { get; set; }

            [LoadColumn(7)]
            [ColumnName(@"col7")]
            public float Col7 { get; set; }

            [LoadColumn(8)]
            [ColumnName(@"col8")]
            public float Col8 { get; set; }

            [LoadColumn(9)]
            [ColumnName(@"col9")]
            public float Col9 { get; set; }

            [LoadColumn(10)]
            [ColumnName(@"col10")]
            public float Col10 { get; set; }

            [LoadColumn(11)]
            [ColumnName(@"col11")]
            public float Col11 { get; set; }

            [LoadColumn(12)]
            [ColumnName(@"col12")]
            public float Col12 { get; set; }

            [LoadColumn(13)]
            [ColumnName(@"col13")]
            public float Col13 { get; set; }

            [LoadColumn(14)]
            [ColumnName(@"col14")]
            public float Col14 { get; set; }

            [LoadColumn(15)]
            [ColumnName(@"col15")]
            public float Col15 { get; set; }

            [LoadColumn(16)]
            [ColumnName(@"col16")]
            public float Col16 { get; set; }

            [LoadColumn(17)]
            [ColumnName(@"col17")]
            public float Col17 { get; set; }

            [LoadColumn(18)]
            [ColumnName(@"col18")]
            public float Col18 { get; set; }

            [LoadColumn(19)]
            [ColumnName(@"col19")]
            public float Col19 { get; set; }

            [LoadColumn(20)]
            [ColumnName(@"col20")]
            public float Col20 { get; set; }

            [LoadColumn(21)]
            [ColumnName(@"col21")]
            public float Col21 { get; set; }

            [LoadColumn(22)]
            [ColumnName(@"col22")]
            public float Col22 { get; set; }

            [LoadColumn(23)]
            [ColumnName(@"col23")]
            public float Col23 { get; set; }

            [LoadColumn(24)]
            [ColumnName(@"col24")]
            public float Col24 { get; set; }

            [LoadColumn(25)]
            [ColumnName(@"col25")]
            public float Col25 { get; set; }

            [LoadColumn(26)]
            [ColumnName(@"col26")]
            public float Col26 { get; set; }

            [LoadColumn(27)]
            [ColumnName(@"col27")]
            public float Col27 { get; set; }

            [LoadColumn(28)]
            [ColumnName(@"col28")]
            public float Col28 { get; set; }

            [LoadColumn(29)]
            [ColumnName(@"col29")]
            public float Col29 { get; set; }

            [LoadColumn(30)]
            [ColumnName(@"col30")]
            public float Col30 { get; set; }

            [LoadColumn(31)]
            [ColumnName(@"col31")]
            public float Col31 { get; set; }

            [LoadColumn(32)]
            [ColumnName(@"col32")]
            public float Col32 { get; set; }

            [LoadColumn(33)]
            [ColumnName(@"col33")]
            public float Col33 { get; set; }

            [LoadColumn(34)]
            [ColumnName(@"col34")]
            public float Col34 { get; set; }

            [LoadColumn(35)]
            [ColumnName(@"col35")]
            public float Col35 { get; set; }

            [LoadColumn(36)]
            [ColumnName(@"col36")]
            public float Col36 { get; set; }

            [LoadColumn(37)]
            [ColumnName(@"col37")]
            public float Col37 { get; set; }

            [LoadColumn(38)]
            [ColumnName(@"col38")]
            public float Col38 { get; set; }

            [LoadColumn(39)]
            [ColumnName(@"col39")]
            public float Col39 { get; set; }

            [LoadColumn(40)]
            [ColumnName(@"col40")]
            public float Col40 { get; set; }

            [LoadColumn(41)]
            [ColumnName(@"col41")]
            public float Col41 { get; set; }

            [LoadColumn(42)]
            [ColumnName(@"col42")]
            public float Col42 { get; set; }

            [LoadColumn(43)]
            [ColumnName(@"col43")]
            public float Col43 { get; set; }

            [LoadColumn(44)]
            [ColumnName(@"col44")]
            public float Col44 { get; set; }

            [LoadColumn(45)]
            [ColumnName(@"col45")]
            public float Col45 { get; set; }

            [LoadColumn(46)]
            [ColumnName(@"col46")]
            public float Col46 { get; set; }

            [LoadColumn(47)]
            [ColumnName(@"col47")]
            public float Col47 { get; set; }

            [LoadColumn(48)]
            [ColumnName(@"col48")]
            public float Col48 { get; set; }

            [LoadColumn(49)]
            [ColumnName(@"col49")]
            public float Col49 { get; set; }

            [LoadColumn(50)]
            [ColumnName(@"col50")]
            public float Col50 { get; set; }

            [LoadColumn(51)]
            [ColumnName(@"col51")]
            public float Col51 { get; set; }

            [LoadColumn(52)]
            [ColumnName(@"col52")]
            public float Col52 { get; set; }

            [LoadColumn(53)]
            [ColumnName(@"col53")]
            public float Col53 { get; set; }

            [LoadColumn(54)]
            [ColumnName(@"col54")]
            public float Col54 { get; set; }

            [LoadColumn(55)]
            [ColumnName(@"col55")]
            public float Col55 { get; set; }

            [LoadColumn(56)]
            [ColumnName(@"col56")]
            public float Col56 { get; set; }

            [LoadColumn(57)]
            [ColumnName(@"col57")]
            public float Col57 { get; set; }

            [LoadColumn(58)]
            [ColumnName(@"col58")]
            public float Col58 { get; set; }

            [LoadColumn(59)]
            [ColumnName(@"col59")]
            public float Col59 { get; set; }

            [LoadColumn(60)]
            [ColumnName(@"col60")]
            public float Col60 { get; set; }

            [LoadColumn(61)]
            [ColumnName(@"col61")]
            public float Col61 { get; set; }

            [LoadColumn(62)]
            [ColumnName(@"col62")]
            public float Col62 { get; set; }

            [LoadColumn(63)]
            [ColumnName(@"col63")]
            public float Col63 { get; set; }

            [LoadColumn(64)]
            [ColumnName(@"col64")]
            public float Col64 { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for MLModel.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [LoadColumn(64)]
            [ColumnName(@"PredictedLabel")]
            public float Prediction { get; set; }
            public float[] Score { get; set; }
        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("MLModel.mlnet");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);


        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        /// <summary>
        /// Use this method to predict scores for all possible labels.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static IOrderedEnumerable<KeyValuePair<string, float>> PredictAllLabels(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            var result = predEngine.Predict(input);
            return GetSortedScoresWithLabels(result);
        }

        /// <summary>
        /// Map the unlabeled result score array to the predicted label names.
        /// </summary>
        /// <param name="result">Prediction to get the labeled scores from.</param>
        /// <returns>Ordered list of label and score.</returns>
        /// <exception cref="Exception"></exception>
        public static IOrderedEnumerable<KeyValuePair<string, float>> GetSortedScoresWithLabels(ModelOutput result)
        {
            var unlabeledScores = result.Score;
            var labelNames = GetLabels(result);

            Dictionary<string, float> labledScores = new Dictionary<string, float>();
            for (int i = 0; i < labelNames.Count(); i++)
            {
                // Map the names to the predicted result score array
                var labelName = labelNames.ElementAt(i);
                labledScores.Add(labelName.ToString(), unlabeledScores[i]);
            }

            return labledScores.OrderByDescending(c => c.Value);
        }

        /// <summary>
        /// Get the ordered label names.
        /// </summary>
        /// <param name="result">Predicted result to get the labels from.</param>
        /// <returns>List of labels.</returns>
        /// <exception cref="Exception"></exception>
        private static IEnumerable<string> GetLabels(ModelOutput result)
        {
            var schema = PredictEngine.Value.OutputSchema;

            var labelColumn = schema.GetColumnOrNull("col64");
            if (labelColumn == null)
            {
                throw new Exception("col64 column not found. Make sure the name searched for matches the name in the schema.");
            }

            // Key values contains an ordered array of the possible labels. This allows us to map the results to the correct label value.
            var keyNames = new VBuffer<float>();
            labelColumn.Value.GetKeyValues(ref keyNames);
            return keyNames.DenseValues().Select(x => x.ToString());
        }

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }
    }
}
